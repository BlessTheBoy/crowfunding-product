{"version":3,"sources":["script.js"],"names":["openMenuBtn","document","getElementById","closeMenuBtn","menuControls","nav","bookmarkBtn","main","querySelector","popupModal","successModal","modalTriggers","querySelectorAll","modalCloseTrigger","successModalCloseTrigger","bodyBlackout","cardWrap","pledgeForms","modalHeader","radios","forms","inputs","donations","backers","progress","bookmarked","donationsValue","backersValue","products","no-reward","amount","minPledge","bamboo-stand","black-stand","mahogany-stand","triggerClick","e","keyCode","which","target","srcElement","click","selectCard","keycode","console","log","radio","checked","updateSelection","dataset","product","openMenu","classList","add","closeMenu","remove","addBookmark","lastElementChild","innerText","updateAmounts","numberWithCommas","value","forEach","element","concat","card","button","disabled","closeModal","modal","openModal","focus","validatePledge","form","min","arguments","length","undefined","input","err","match","Number","x","parts","toString","split","replace","join","addEventListener","trigger","popupTrigger","header","nextElementSibling","preventDefault","pledge"],"mappings":"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","file":"script.js","sourcesContent":["/***************************\r\nDom references\r\n***************************/\r\n// For nav\r\nconst openMenuBtn = document.getElementById(\"burger\");\r\nconst closeMenuBtn = document.getElementById(\"closeMenu\");\r\nconst menuControls = document.getElementById(\"menuControls\");\r\nconst nav = document.getElementById(\"nav\");\r\n\r\n// For bookmark\r\nconst bookmarkBtn = document.getElementById(\"bookmarkBtn\");\r\n\r\n// For modals\r\nconst main = document.querySelector(\"#mainContent\");\r\nconst popupModal = document.querySelector(\".popup-modal\");\r\nconst successModal = document.querySelector(\".success-modal\");\r\nconst modalTriggers = document.querySelectorAll(\".popup-trigger\");\r\nconst modalCloseTrigger = document.querySelector(\".popup-modal__close\");\r\nconst successModalCloseTrigger = document.querySelector(\r\n  \".success-modal__close\"\r\n);\r\nconst bodyBlackout = document.querySelector(\".body-blackout\");\r\nconst cardWrap = document.querySelectorAll(\".cardWrap\");\r\nconst pledgeForms = document.querySelectorAll(\".cardWrap form\");\r\nconst modalHeader = document.querySelectorAll(\".cardWrap .head\");\r\nconst radios = document.querySelectorAll(\"input[type='radio']\");\r\nconst forms = document.querySelectorAll(\".productForm form\");\r\nconst inputs = document.querySelectorAll(\r\n  \".productForm form input[type='text']\"\r\n);\r\nconst donations = document.getElementById(\"donations\");\r\nconst backers = document.getElementById(\"backers\");\r\nconst progress = document.getElementById(\"progress\");\r\n\r\n/***************************\r\nVariables\r\n***************************/\r\nlet bookmarked = false;\r\nlet donationsValue = 89914;\r\nlet backersValue = 5007;\r\n// Defining amount of products left and minimum pledges for products\r\nlet products = {\r\n  \"no-reward\": { amount: null, minPledge: 0 },\r\n  \"bamboo-stand\": { amount: 101, minPledge: 25 },\r\n  \"black-stand\": { amount: 64, minPledge: 75 },\r\n  \"mahogany-stand\": { amount: 0, minPledge: 200 },\r\n};\r\n\r\n/***************************\r\nNavbar Logic\r\n***************************/\r\nopenMenuBtn.addEventListener(\"click\", openMenu);\r\ncloseMenuBtn.addEventListener(\"click\", closeMenu);\r\n\r\nmodalCloseTrigger.addEventListener(\"keypress\", triggerClick);\r\ncardWrap.forEach(card => {card.addEventListener(\"keypress\", selectCard)})\r\n\r\nfunction triggerClick(e) {\r\n  let keycode = e.keyCode ? e.keyCode : e.which;\r\n  if (keycode == \"13\") {\r\n    var caller = e.target || e.srcElement;\r\n    caller.click();\r\n  }\r\n}\r\nfunction selectCard(e) {\r\n  let keycode = e.keyCode ? e.keyCode : e.which;\r\n  console.log(\"Enter clicked on card\");\r\n  if (keycode == \"13\") {\r\n    var caller = e.target || e.srcElement;\r\n    let radio = caller.querySelector(\"input[type='radio']\");\r\n    radio.checked = true;\r\n    updateSelection(radio.dataset.product);\r\n  }\r\n}\r\n\r\nfunction openMenu() {\r\n  nav.classList.add(\"open\");\r\n  menuControls.classList.add(\"open\");\r\n}\r\nfunction closeMenu() {\r\n  nav.classList.remove(\"open\");\r\n  menuControls.classList.remove(\"open\");\r\n}\r\n\r\n/***************************\r\nBookmark Logic\r\n***************************/\r\nbookmarkBtn.addEventListener(\"click\", addBookmark);\r\n\r\nfunction addBookmark() {\r\n  if (!bookmarked) {\r\n    console.log(\"adding bookmark\");\r\n    bookmarkBtn.lastElementChild.innerText = \"Bookmarked\";\r\n    bookmarkBtn.classList.add(\"bookmarked\");\r\n    bookmarked = true;\r\n  }\r\n}\r\n\r\n/***************************\r\nModal Logic\r\n***************************/\r\n\r\n// close modals\r\nmodalCloseTrigger.addEventListener(\"click\", () => {\r\n  closeModal(popupModal);\r\n});\r\n\r\n// Close success modal\r\nsuccessModalCloseTrigger.addEventListener(\"click\", () => {\r\n  closeModal(successModal);\r\n});\r\n\r\n// Close modal when you click outside of it\r\nbodyBlackout.addEventListener(\"click\", () => {\r\n  closeModal();\r\n});\r\n\r\n// Open modal when triggers are clicked\r\nmodalTriggers.forEach((trigger) => {\r\n  trigger.addEventListener(\"click\", () => {\r\n    const product = trigger.dataset.popupTrigger;\r\n    openModal(popupModal, product);\r\n  });\r\n});\r\n\r\n// Update selected product to match selected radio button\r\nradios.forEach((radio) =>\r\n  radio.addEventListener(\"change\", () => updateSelection(radio.dataset.product))\r\n);\r\n\r\n// select product and check radio on header click\r\nmodalHeader.forEach((header) => {\r\n  header.addEventListener(\"click\", () => {\r\n    let radio = header.nextElementSibling.querySelector(\"input[type='radio']\");\r\n    radio.checked = true;\r\n    updateSelection(radio.dataset.product);\r\n  });\r\n});\r\n\r\n// Handle pledge submission, validation and updating amounts\r\nforms.forEach((form) => {\r\n  let product = form.dataset.product;\r\n  form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    let form = e.target;\r\n\r\n    // Validate form input\r\n    let pledge = validatePledge(form, products[`${product}`].minPledge);\r\n\r\n    if (pledge) {\r\n      // update donations\r\n      donationsValue += pledge;\r\n      backersValue += 1;\r\n      products[`${product}`].amount -= 1;\r\n\r\n      updateAmounts(product);\r\n\r\n      // Show success modal\r\n      closeModal(popupModal);\r\n      openModal(successModal);\r\n    }\r\n  });\r\n\r\n  // Auto validating pledge amounts\r\n  let input = form.querySelector(\"input[type='text']\");\r\n  input.addEventListener(\"input\", () => {\r\n    validatePledge(form, products[`${product}`].minPledge);\r\n  });\r\n});\r\n\r\n// Update amounts funtion\r\nfunction updateAmounts(product) {\r\n  donations.innerText = numberWithCommas(donationsValue);\r\n  backers.innerText = numberWithCommas(backersValue);\r\n  progress.value = donationsValue;\r\n\r\n  // update amounts\r\n  let amount = document.querySelectorAll(`.amount`);\r\n  if (product) {\r\n    // Update the product amount only\r\n    amount.forEach((element) => {\r\n      if (element.dataset.product === product) {\r\n        if (products[`${product}`].amount === 0) {\r\n          document\r\n            .querySelectorAll(`.card[data-product=${product}]`)\r\n            .forEach((card) => {\r\n              card.classList.add(\"out-of-stock\");\r\n              let button = card.querySelector(\"button\");\r\n              button.disabled = true;\r\n              button.innerText = \"Out of Stock\";\r\n            });\r\n          document\r\n            .querySelectorAll(`.cardWrap[data-product=${product}]`)\r\n            .forEach((card) => card.classList.add(\"out-of-stock\"));\r\n        }\r\n\r\n        element.innerText = products[`${product}`].amount;\r\n      }\r\n    });\r\n  } else {\r\n    // Update all product amount\r\n    amount.forEach((element) => {\r\n      if (products[`${element.dataset.product}`].amount === 0) {\r\n        document\r\n          .querySelectorAll(`.card[data-product=${product}]`)\r\n          .forEach((card) => {\r\n            card.classList.add(\"out-of-stock\");\r\n            let button = card.querySelector(\"button\");\r\n            button.disabled = true;\r\n            button.innerText = \"Out of Stock\";\r\n          });\r\n        document\r\n          .querySelectorAll(`.cardWrap[data-product=${product}]`)\r\n          .forEach((card) => card.classList.add(\"out-of-stock\"));\r\n      }\r\n\r\n      element.innerText = products[`${element.dataset.product}`].amount;\r\n    });\r\n  }\r\n}\r\n\r\n// Close modal funtion\r\nfunction closeModal(modal) {\r\n  // Remove all error messages and inputs\r\n\r\n  if (modal) {\r\n    // close specified modal\r\n    modal.classList.remove(\"is--visible\");\r\n  } else {\r\n    // close all modals\r\n    popupModal.classList.remove(\"is--visible\");\r\n    successModal.classList.remove(\"is--visible\");\r\n  }\r\n  bodyBlackout.classList.remove(\"success\");\r\n  main.classList.remove(\"success\");\r\n  bodyBlackout.classList.remove(\"is-blacked-out\");\r\n  main.classList.remove(\"modal-opened\");\r\n\r\n  // remove all selections\r\n  updateSelection();\r\n}\r\n\r\n// Open modal function\r\nfunction openModal(modal, product) {\r\n  if (product) {\r\n    updateSelection(product);\r\n  }\r\n  modal.classList.add(\"is--visible\");\r\n  bodyBlackout.classList.add(\"is-blacked-out\");\r\n  main.classList.add(\"modal-opened\");\r\n  if (modal.dataset.popupModal === \"success\") {\r\n    bodyBlackout.classList.add(\"success\");\r\n    // bodyBlackout.scrollBottom = 0;\r\n    main.classList.add(\"success\");\r\n    modal.querySelector(\"button\").focus();\r\n  }\r\n}\r\n\r\n// Funtion to update selected product on modal\r\nfunction updateSelection(product) {\r\n  cardWrap.forEach((card) => {\r\n    if (product && card.dataset.product == product) {\r\n      // Check card\r\n      card.classList.add(\"checked\");\r\n      card.querySelector(\"input[type='radio']\").checked = true;\r\n\r\n      // autofocus input\r\n      card.querySelector(\"input[type='text']\").focus();\r\n    } else {\r\n      // Uncheck card, clear inputs and clear errors\r\n      card.classList.remove(\"checked\");\r\n      card.querySelector(\"input[type='radio']\").checked = false;\r\n      card.querySelector(\"input[type='text']\").value = \"\";\r\n      card.querySelector(\"form\").classList.remove(\"error\");\r\n    }\r\n  });\r\n}\r\n\r\n// Function to validate pledge amount\r\nfunction validatePledge(form, min = 0) {\r\n  // Get children elements\r\n  let input = form.querySelector(\"input[type='text']\");\r\n  let err = form.querySelector(\".errorMessage\");\r\n\r\n  if (input.value === \"\") {\r\n    form.classList.add(\"error\");\r\n    err.innerText = \"enter amount\";\r\n    return;\r\n  } else if (input.value.match(/\\D/)) {\r\n    form.classList.add(\"error\");\r\n    err.innerText = \"enter numeric characters only [0-9]\";\r\n    return;\r\n  } else if (Number(input.value) < min) {\r\n    form.classList.add(\"error\");\r\n    err.innerText = `amount must be at least $${min}`;\r\n    return;\r\n  } else {\r\n    form.classList.remove(\"error\");\r\n    err.innerText = \"\";\r\n    return Number(input.value);\r\n  }\r\n}\r\n\r\n// turn numbers to comma seperated strings\r\nfunction numberWithCommas(x) {\r\n  var parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  return parts.join(\".\");\r\n}\r\n\r\n// Update amounts on start\r\nupdateAmounts();\r\n\r\n// Confirm script is connected\r\nconsole.log(\"script loaded\");\r\n"]}