{"version":3,"sources":["script.js"],"names":["openMenuBtn","document","getElementById","closeMenuBtn","menuControls","nav","bookmarkBtn","popupModal","querySelector","successModal","modalTriggers","querySelectorAll","modalCloseTrigger","successModalCloseTrigger","bodyBlackout","cardWrap","pledgeForms","modalHeader","radios","forms","inputs","donations","backers","progress","bookmarked","donationsValue","backersValue","products","no-reward","amount","minPledge","bamboo-stand","black-stand","mahogany-stand","openMenu","classList","add","closeMenu","remove","addBookmark","console","log","lastElementChild","innerText","updateAmounts","product","numberWithCommas","value","forEach","element","dataset","concat","card","button","disabled","closeModal","modal","radio","checked","updateSelection","input","form","openModal","focus","validatePledge","min","arguments","length","undefined","err","match","Number","x","parts","toString","split","replace","join","addEventListener","trigger","header","nextElementSibling","e","preventDefault","pledge","target"],"mappings":"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","file":"script.js","sourcesContent":["/***************************\r\nDom references\r\n***************************/\r\n// For nav\r\nconst openMenuBtn = document.getElementById(\"burger\");\r\nconst closeMenuBtn = document.getElementById(\"closeMenu\");\r\nconst menuControls = document.getElementById(\"menuControls\");\r\nconst nav = document.getElementById(\"nav\");\r\n\r\n// For bookmark\r\nconst bookmarkBtn = document.getElementById(\"bookmarkBtn\");\r\n\r\n// For modals\r\nconst popupModal = document.querySelector(\".popup-modal\");\r\nconst successModal = document.querySelector(\".success-modal\");\r\nconst modalTriggers = document.querySelectorAll(\".popup-trigger\");\r\nconst modalCloseTrigger = document.querySelector(\".popup-modal__close\");\r\nconst successModalCloseTrigger = document.querySelector(\r\n  \".success-modal__close\"\r\n);\r\nconst bodyBlackout = document.querySelector(\".body-blackout\");\r\nconst cardWrap = document.querySelectorAll(\".cardWrap\");\r\nconst pledgeForms = document.querySelectorAll(\".cardWrap form\");\r\nconst modalHeader = document.querySelectorAll(\".cardWrap .head\");\r\nconst radios = document.querySelectorAll(\"input[type='radio']\");\r\nconst forms = document.querySelectorAll(\".productForm form\");\r\nconst inputs = document.querySelectorAll(\r\n  \".productForm form input[type='text']\"\r\n);\r\nconst donations = document.getElementById(\"donations\");\r\nconst backers = document.getElementById(\"backers\");\r\nconst progress = document.getElementById(\"progress\");\r\n\r\n/***************************\r\nVariables\r\n***************************/\r\nlet bookmarked = false;\r\nlet donationsValue = 89914;\r\nlet backersValue = 5007;\r\n// Defining amount of products left and minimum pledges for products\r\nlet products = {\r\n  \"no-reward\": { amount: null, minPledge: 0 },\r\n  \"bamboo-stand\": { amount: 101, minPledge: 25 },\r\n  \"black-stand\": { amount: 64, minPledge: 75 },\r\n  \"mahogany-stand\": { amount: 0, minPledge: 200 },\r\n};\r\n\r\n/***************************\r\nNavbar Logic\r\n***************************/\r\nopenMenuBtn.addEventListener(\"click\", openMenu);\r\ncloseMenuBtn.addEventListener(\"click\", closeMenu);\r\n\r\nfunction openMenu() {\r\n  nav.classList.add(\"open\");\r\n  menuControls.classList.add(\"open\");\r\n}\r\nfunction closeMenu() {\r\n  nav.classList.remove(\"open\");\r\n  menuControls.classList.remove(\"open\");\r\n}\r\n\r\n/***************************\r\nBookmark Logic\r\n***************************/\r\nbookmarkBtn.addEventListener(\"click\", addBookmark);\r\n\r\nfunction addBookmark() {\r\n  if (!bookmarked) {\r\n    console.log(\"adding bookmark\");\r\n    bookmarkBtn.lastElementChild.innerText = \"Bookmarked\";\r\n    bookmarkBtn.classList.add(\"bookmarked\");\r\n    bookmarked = true;\r\n  }\r\n}\r\n\r\n/***************************\r\nModal Logic\r\n***************************/\r\n\r\n// close modals\r\nmodalCloseTrigger.addEventListener(\"click\", () => {\r\n  closeModal(popupModal);\r\n});\r\n\r\n// Close success modal\r\nsuccessModalCloseTrigger.addEventListener(\"click\", () => {\r\n  closeModal(successModal);\r\n});\r\n\r\n// Close modal when you click outside of it\r\nbodyBlackout.addEventListener(\"click\", () => {\r\n  closeModal();\r\n});\r\n\r\n// Open modal when triggers are clicked\r\nmodalTriggers.forEach((trigger) => {\r\n  trigger.addEventListener(\"click\", () => {\r\n    const { product } = trigger.dataset;\r\n    openModal(popupModal, product);\r\n  });\r\n});\r\n\r\n// Update selected product to match selected radio button\r\nradios.forEach((radio) =>\r\n  radio.addEventListener(\"input\", () => updateSelection(radio.dataset.product))\r\n);\r\n\r\n// select product and check radio on header click\r\nmodalHeader.forEach((header) => {\r\n  header.addEventListener(\"click\", () => {\r\n    let radio = header.nextElementSibling.querySelector(\"input[type='radio']\");\r\n    radio.checked = true;\r\n    updateSelection(radio.dataset.product);\r\n  });\r\n});\r\n\r\n// Handle pledge submission, validation and updating amounts\r\nforms.forEach((form) => {\r\n  let product = form.dataset.product;\r\n  form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    let form = e.target;\r\n\r\n    // Validate form input\r\n    let pledge = validatePledge(form, products[`${product}`].minPledge);\r\n\r\n    if (pledge) {\r\n      // update donations\r\n      donationsValue += pledge;\r\n      backersValue += 1;\r\n      products[`${product}`].amount -= 1;\r\n\r\n      updateAmounts(product);\r\n\r\n      // Show success modal\r\n      closeModal(popupModal);\r\n      openModal(successModal);\r\n    }\r\n  });\r\n\r\n  // Auto validating pledge amounts\r\n  let input = form.querySelector(\"input[type='text']\");\r\n  input.addEventListener(\"input\", () => {\r\n    validatePledge(form, products[`${product}`].minPledge);\r\n  });\r\n});\r\n\r\n// Update amounts funtion\r\nfunction updateAmounts(product) {\r\n  donations.innerText = numberWithCommas(donationsValue);\r\n  backers.innerText = numberWithCommas(backersValue);\r\n  progress.value = donationsValue;\r\n\r\n  // update amounts\r\n  let amount = document.querySelectorAll(`.amount`);\r\n  if (product) {\r\n    // Update the product amount only\r\n    amount.forEach((element) => {\r\n      if (element.dataset.product === product) {\r\n        if (products[`${product}`].amount === 0) {\r\n          document\r\n            .querySelectorAll(`.card[data-product=${product}]`)\r\n            .forEach((card) => {\r\n              card.classList.add(\"out-of-stock\");\r\n              let button = card.querySelector(\"button\");\r\n              button.disabled = true;\r\n              button.innerText = \"Out of Stock\";\r\n            });\r\n          document\r\n            .querySelectorAll(`.cardWrap[data-product=${product}]`)\r\n            .forEach((card) => card.classList.add(\"out-of-stock\"));\r\n        }\r\n\r\n        element.innerText = products[`${product}`].amount;\r\n      }\r\n    });\r\n  } else {\r\n    // Update all product amount\r\n    amount.forEach((element) => {\r\n      if (products[`${element.dataset.product}`].amount === 0) {\r\n        document\r\n          .querySelectorAll(`.card[data-product=${product}]`)\r\n          .forEach((card) => {\r\n            card.classList.add(\"out-of-stock\");\r\n            let button = card.querySelector(\"button\");\r\n            button.disabled = true;\r\n            button.innerText = \"Out of Stock\";\r\n          });\r\n        document\r\n          .querySelectorAll(`.cardWrap[data-product=${product}]`)\r\n          .forEach((card) => card.classList.add(\"out-of-stock\"));\r\n      }\r\n\r\n      element.innerText = products[`${element.dataset.product}`].amount;\r\n    });\r\n  }\r\n}\r\n\r\n// Close modal funtion\r\nfunction closeModal(modal) {\r\n  // Remove all error messages and inputs\r\n\r\n  if (modal) {\r\n    // close specified modal\r\n    modal.classList.remove(\"is--visible\");\r\n  } else {\r\n    // close all modals\r\n    popupModal.classList.remove(\"is--visible\");\r\n    successModal.classList.remove(\"is--visible\");\r\n  }\r\n  bodyBlackout.classList.remove(\"is-blacked-out\");\r\n\r\n  // remove all selections\r\n  radios.forEach((radio) => {\r\n    radio.checked = false;\r\n  });\r\n  updateSelection();\r\n\r\n  // Clear all inputs and error\r\n  inputs.forEach((input) => {\r\n    input.value = \"\";\r\n  });\r\n  pledgeForms.forEach((form) => {\r\n    form.classList.remove(\"error\");\r\n  });\r\n}\r\n\r\n// Open modal function\r\nfunction openModal(modal, product = null) {\r\n  modal.classList.add(\"is--visible\");\r\n  bodyBlackout.classList.add(\"is-blacked-out\");\r\n}\r\n\r\n// Funtion to update selected product on modal\r\nfunction updateSelection(product) {\r\n  cardWrap.forEach((card) => {\r\n    if (product && card.dataset.product == product) {\r\n      card.classList.add(\"checked\");\r\n\r\n      // autofocus input\r\n      card.querySelector(\"input[type='text']\").focus();\r\n    } else {\r\n      card.classList.remove(\"checked\");\r\n    }\r\n  });\r\n}\r\n\r\n// Function to validate pledge amount\r\nfunction validatePledge(form, min = 0) {\r\n  // Get children elements\r\n  let input = form.querySelector(\"input[type='text']\");\r\n  let err = form.querySelector(\".errorMessage\");\r\n\r\n  if (input.value === \"\") {\r\n    form.classList.add(\"error\");\r\n    err.innerText = \"enter amount\";\r\n    return;\r\n  } else if (input.value.match(/\\D/)) {\r\n    form.classList.add(\"error\");\r\n    err.innerText = \"enter numeric characters only [0-9]\";\r\n    return;\r\n  } else if (Number(input.value) < min) {\r\n    form.classList.add(\"error\");\r\n    err.innerText = `amount must be at least $${min}`;\r\n    return;\r\n  } else {\r\n    form.classList.remove(\"error\");\r\n    err.innerText = \"\";\r\n    return Number(input.value);\r\n  }\r\n}\r\n\r\n// turn numbers to comma seperated strings\r\nfunction numberWithCommas(x) {\r\n  var parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  return parts.join(\".\");\r\n}\r\n\r\n// Update amounts on start\r\nupdateAmounts();\r\n\r\n// Confirm script is connected\r\nconsole.log(\"script loaded\");\r\n\r\n// Open modal already selected\r\n\r\n// Remove all error messages and inputs on modal close\r\n"]}