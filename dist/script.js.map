{"version":3,"sources":["script.js"],"names":["openMenuBtn","document","getElementById","closeMenuBtn","menuControls","nav","openMenu","classList","add","closeMenu","remove","console","log","addEventListener","bookmarkBtn","addBookmark","bookmarked","lastElementChild","innerText","popupModal","querySelector","successModal","modalTriggers","querySelectorAll","modalCloseTrigger","successModalCloseTrigger","bodyBlackout","cardWrap","radios","forms","inputs","donations","backers","progress","donationsValue","backersValue","closeModal","modal","openModal","validatePledge","form","min","arguments","length","undefined","input","err","value","match","Number","concat","numberWithCommas","forEach","trigger","product","dataset","radio","card","focus","minPledge","no-reward","bamboo-stand","black-stand","mahogany-stand","x","parts","toString","split","replace","join","e","preventDefault","pledge","target","element","updatedAmount","button","disabled"],"mappings":"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","file":"script.js","sourcesContent":["// Navbar operation code\r\nvar openMenuBtn = document.getElementById(\"burger\");\r\nvar closeMenuBtn = document.getElementById(\"closeMenu\");\r\nvar menuControls = document.getElementById(\"menuControls\");\r\nvar nav = document.getElementById(\"nav\");\r\n\r\nconsole.log(\"script loaded\");\r\n\r\nopenMenuBtn.addEventListener(\"click\", openMenu);\r\ncloseMenuBtn.addEventListener(\"click\", closeMenu);\r\n\r\nfunction openMenu() {\r\n  nav.classList.add(\"open\");\r\n  menuControls.classList.add(\"open\");\r\n}\r\nfunction closeMenu() {\r\n  nav.classList.remove(\"open\");\r\n  menuControls.classList.remove(\"open\");\r\n}\r\n\r\n// Bookmark page\r\nvar bookmarkBtn = document.getElementById(\"bookmarkBtn\");\r\nbookmarkBtn.addEventListener(\"click\", addBookmark);\r\n\r\nlet bookmarked = false;\r\n\r\nfunction addBookmark() {\r\n  if (!bookmarked) {\r\n    console.log(\"adding bookmark\");\r\n    bookmarkBtn.lastElementChild.innerText = \"Bookmarked\";\r\n    bookmarkBtn.classList.add(\"bookmarked\");\r\n    bookmarked = true;\r\n  }\r\n}\r\n\r\n// Modals\r\nconst popupModal = document.querySelector(\".popup-modal\");\r\nconst successModal = document.querySelector(\".success-modal\");\r\nconst modalTriggers = document.querySelectorAll(\".popup-trigger\");\r\nconst modalCloseTrigger = document.querySelector(\".popup-modal__close\");\r\nconst successModalCloseTrigger = document.querySelector(\r\n  \".success-modal__close\"\r\n);\r\nconst bodyBlackout = document.querySelector(\".body-blackout\");\r\nconst cardWrap = document.querySelectorAll(\".cardWrap\");\r\nconst radios = document.querySelectorAll(\"input[type='radio']\");\r\nconst forms = document.querySelectorAll(\".productForm form\");\r\nconst inputs = document.querySelectorAll(\r\n  \".productForm form input[type='text']\"\r\n);\r\nconst donations = document.getElementById(\"donations\");\r\nconst backers = document.getElementById(\"backers\");\r\nconst progress = document.getElementById(\"progress\");\r\n\r\nlet donationsValue = 89914;\r\nlet backersValue = 5007;\r\n\r\ndonations.innerText = numberWithCommas(donationsValue);\r\nbackers.innerText = numberWithCommas(backersValue);\r\nprogress.value = donationsValue;\r\n\r\nmodalCloseTrigger.addEventListener(\"click\", () => {\r\n  closeModal(popupModal);\r\n});\r\n\r\nsuccessModalCloseTrigger.addEventListener(\"click\", () => {\r\n  closeModal(successModal);\r\n});\r\n\r\nbodyBlackout.addEventListener(\"click\", () => {\r\n  closeModal();\r\n});\r\n\r\n// Close modal\r\nfunction closeModal(modal) {\r\n  // Remove all error messages and inputs\r\n\r\n  if (modal) {\r\n    modal.classList.remove(\"is--visible\");\r\n  } else {\r\n    popupModal.classList.remove(\"is--visible\");\r\n    successModal.classList.remove(\"is--visible\");\r\n  }\r\n  bodyBlackout.classList.remove(\"is-blacked-out\");\r\n}\r\n\r\n// Open modal\r\nfunction openModal(modal, product = null) {\r\n  modal.classList.add(\"is--visible\");\r\n  bodyBlackout.classList.add(\"is-blacked-out\");\r\n}\r\n\r\nmodalTriggers.forEach((trigger) => {\r\n  trigger.addEventListener(\"click\", () => {\r\n    const { product } = trigger.dataset;\r\n    openModal(popupModal, product);\r\n  });\r\n});\r\n\r\nradios.forEach((radio) =>\r\n  radio.addEventListener(\"change\", () => {\r\n    cardWrap.forEach((card) => {\r\n      if (card.dataset.product == radio.dataset.product) {\r\n        card.classList.add(\"checked\");\r\n\r\n        // autofocus input\r\n        card.querySelector(\"input[type='text']\").focus();\r\n      } else {\r\n        card.classList.remove(\"checked\");\r\n      }\r\n    });\r\n  })\r\n);\r\n\r\nfunction validatePledge(form, min = 0) {\r\n  // Get children elements\r\n  let input = form.querySelector(\"input[type='text']\");\r\n  let err = form.querySelector(\".errorMessage\");\r\n\r\n  if (input.value === \"\") {\r\n    form.classList.add(\"error\");\r\n    err.innerText = \"enter amount\";\r\n    return;\r\n  } else if (input.value.match(/\\D/)) {\r\n    form.classList.add(\"error\");\r\n    err.innerText = \"enter numeric characters only [0-9]\";\r\n    return;\r\n  } else if (Number(input.value) < min) {\r\n    form.classList.add(\"error\");\r\n    err.innerText = `amount must be at least $${min}`;\r\n    return;\r\n  } else {\r\n    form.classList.remove(\"error\");\r\n    err.innerText = \"\";\r\n    return Number(input.value);\r\n  }\r\n}\r\n\r\n// Defining minimum pledges\r\nlet minPledge = {\r\n  \"no-reward\": 0,\r\n  \"bamboo-stand\": 25,\r\n  \"black-stand\": 75,\r\n  \"mahogany-stand\": 200,\r\n};\r\n\r\nforms.forEach((form) => {\r\n  let product = form.dataset.product;\r\n  form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    let form = e.target;\r\n\r\n    // Validate form input\r\n    let pledge = validatePledge(form, minPledge[`${product}`]);\r\n\r\n    if (pledge) {\r\n      // update donations\r\n      donationsValue += pledge;\r\n      backersValue += 1;\r\n\r\n      donations.innerText = numberWithCommas(donationsValue);\r\n      backers.innerText = numberWithCommas(backersValue);\r\n      progress.value = donationsValue;\r\n\r\n      // update amount\r\n      let amount = document.querySelectorAll(`.amount`);\r\n      amount.forEach((element) => {\r\n        if (element.dataset.product === product) {\r\n          let updatedAmount = Number(element.innerText) - 1;\r\n\r\n          if (updatedAmount === 0) {\r\n            document\r\n              .querySelectorAll(`.card[data-product=${product}]`)\r\n              .forEach((card) => {\r\n                card.classList.add(\"out-of-stock\");\r\n                let button = card.querySelector(\"button\");\r\n                button.disabled = true;\r\n                button.innerText = \"Out of Stock\";\r\n              });\r\n            document\r\n              .querySelectorAll(`.cardWrap[data-product=${product}]`)\r\n              .forEach((card) => card.classList.add(\"out-of-stock\"));\r\n          }\r\n\r\n          element.innerText = updatedAmount;\r\n        }\r\n      });\r\n      // update amount left and disable if zero\r\n\r\n      // Show success modal\r\n      closeModal(popupModal);\r\n      openModal(successModal);\r\n\r\n      // select on header click\r\n      // Open already selected\r\n\r\n      console.log(`pledge`, pledge);\r\n    }\r\n  });\r\n  let input = form.querySelector(\"input[type='text']\");\r\n  input.addEventListener(\"input\", () => {\r\n    validatePledge(form, minPledge[`${product}`]);\r\n  });\r\n});\r\n\r\nfunction numberWithCommas(x) {\r\n  var parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  return parts.join(\".\");\r\n}\r\n"]}