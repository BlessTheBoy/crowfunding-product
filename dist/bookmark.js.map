{"version":3,"sources":["bookmark.js"],"names":["currentTab","isBookmarked","onGot","tabInfo","console","log","onError","error","concat","isSupportedProtocol","urlString","url","document","createElement","href","indexOf","protocol","checkBookmark","browser","bookmarks","search","then","length","addBookmark","currentBookmark","create","title","alert","tabs","getCurrent","onCreated","addListener","onRemoved","onUpdated"],"mappings":"AAAA,aAAA,IAAIA,WACAC,aAWJ,SAASC,MAAMC,GACbC,QAAQC,IAAIF,GACZH,WAAaG,EAGf,SAASG,QAAQC,GACfH,QAAQC,IAAR,UAAAG,OAAsBD,IAMxB,SAASE,oBAAoBC,GAC3B,IACIC,EAAMC,SAASC,cAAc,KAEjC,OADAF,EAAIG,KAAOJ,GACyC,GAH3B,CAAC,SAAU,QAAS,OAAQ,SAG3BK,QAAQJ,EAAIK,UAMxC,SAASC,iBACPb,QAAQC,IAAI,yBACRI,oBAAoBT,WAAWW,MACjBO,QAAQC,UAAUC,OAAO,CAAET,IAAKX,WAAWW,MACjDU,MAAK,SAACF,GACd,GAAIA,EAAUG,OAAS,EAGrB,OAFArB,cAAe,OACfG,QAAQC,IAAI,kBAIdJ,cAAe,EACfG,QAAQC,IAAI,kCAGdD,QAAQC,IAAR,sCAAAG,OAAkDR,WAAWW,IAA7D,WAOJ,SAASY,cACFC,gBAKHpB,QAAQC,IAAI,gCAJZa,QAAQC,UAAUM,OAAO,CAAEC,MAAO1B,WAAW0B,MAAOf,IAAKX,WAAWW,MACpEV,cAAe,EACf0B,MAAM,mBA1DVvB,QAAQC,IAAI,yBAGZa,QAAQU,KAAKC,aAAaR,KAAKnB,MAAOI,SA8DtCY,QAAQC,UAAUW,UAAUC,YAAYd,eAGxCC,QAAQC,UAAUa,UAAUD,YAAYd,eAGxCC,QAAQU,KAAKK,UAAUF,YAAYd","file":"bookmark.js","sourcesContent":["var currentTab;\r\nvar isBookmarked;\r\nconsole.log(\"bookmark.js connected\");\r\n\r\n// Get current tab\r\nbrowser.tabs.getCurrent().then(onGot, onError);\r\n\r\n/*\r\n * Updates the browserAction icon to reflect whether the current page\r\n * is already bookmarked.\r\n */\r\n\r\nfunction onGot(tabInfo) {\r\n  console.log(tabInfo);\r\n  currentTab = tabInfo;\r\n}\r\n\r\nfunction onError(error) {\r\n  console.log(`Error: ${error}`);\r\n}\r\n\r\n/*\r\n * check if url is supported\r\n */\r\nfunction isSupportedProtocol(urlString) {\r\n  var supportedProtocols = [\"https:\", \"http:\", \"ftp:\", \"file:\"];\r\n  var url = document.createElement(\"a\");\r\n  url.href = urlString;\r\n  return supportedProtocols.indexOf(url.protocol) != -1;\r\n}\r\n\r\n/*\r\n * checks if page was preiously bookmarked\r\n */\r\nfunction checkBookmark() {\r\n  console.log(\"Checking for bookmark\");\r\n  if (isSupportedProtocol(currentTab.url)) {\r\n    var searching = browser.bookmarks.search({ url: currentTab.url });\r\n    searching.then((bookmarks) => {\r\n      if (bookmarks.length > 0) {\r\n        isBookmarked = true;\r\n        console.log(\"bookmark found\");\r\n        return;\r\n      }\r\n\r\n      isBookmarked = false;\r\n      console.log(\"Page hasn't been bookmarked\");\r\n    });\r\n  } else {\r\n    console.log(`Bookmark it! does not support the '${currentTab.url}' URL.`);\r\n  }\r\n}\r\n\r\n/*\r\n * Bookmark the current page.\r\n */\r\nfunction addBookmark() {\r\n  if (!currentBookmark) {\r\n    browser.bookmarks.create({ title: currentTab.title, url: currentTab.url });\r\n    isBookmarked = true;\r\n    alert(\"Bookmark added\");\r\n  } else {\r\n    console.log(\"Page was already bookmarked\");\r\n  }\r\n}\r\n\r\n// listen for bookmarks being created\r\nbrowser.bookmarks.onCreated.addListener(checkBookmark);\r\n\r\n// listen for bookmarks being removed\r\nbrowser.bookmarks.onRemoved.addListener(checkBookmark);\r\n\r\n// listen to tab URL changes\r\nbrowser.tabs.onUpdated.addListener(checkBookmark);\r\n\r\n// update when the extension loads initially\r\n// checkBookmark();\r\n"]}